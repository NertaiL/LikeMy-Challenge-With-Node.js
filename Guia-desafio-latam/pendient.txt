Subir video explicando el codigo, y subir desafio al proyecto.
para subir el repo a github y no se suban los comentarios del codigo, en gitignore tenemos que agregar comment


preguntar por :
si es necesario const { titulo, url, descripcion } = req.body; destructurar por todos los atributos de una, o se tiene que hacer como sale ahi manualmente cada uno.

export const createPosts = async (req, res) => {
  try {
    const { titulo, url, descripcion } = req.body;

    if (!titulo && !url && !descripcion) {
        console.log("All fields are required");
        res.status(400).json({ error: "All fields are required" });
        return;
      }
  
      if (!titulo) {
        console.log("Title is required");
        res.status(400).json({ error: "Title is required" });
        return;
      }
  
      if (!url) {
        console.log("URL is required");
        res.status(400).json({ error: "URL is required" });
        return;
      }
  
      if (!descripcion) {
        console.log("Description is required");
        res.status(400).json({ error: "Description is required" });
        return;
      }

    const newPost = await createPost(titulo, url, descripcion); 
    res.status(201).json(newPost); 
  } catch (error) {
    res.status(500).json({ error: "Error processing request" });
    console.error("Error processing request:", error);
  }
};




Basicamente el SET donde = NOT Done estamos diciendo al momento de la consulta cuando actualizemos el registro si done esta true cuando se actualize pasara a false eso es todo
SETdone=NOTdone
Modifica el valor de la columna done. La expresión NOT done invierte el valor actual de la
columnadone.Sidoneestrue,despuésdelaactualizaciónseráfalse,yviceversa.
Si probamos la acción PUT en la herramienta de consultas, veremos el siguiente resultado.
Elestadodelatareacambiaráatrue.
VerboPUT-Ruta http://localhost:5000/todos/1
{
"id": 1,
"title": "Tarea 1",
"done": true
}



Dato interesante
En la documentación oficial de node-postgres puedes omitir llamar a las variables de
entorno en tu archivo connection.js siempre y cuando los nombres de estas variables sean:
PGUSER="postgres"
PGHOST="localhost"
PGPASSWORD="root"
PGDATABASE="db_app_todo"
PGPORT=5432
En el archivo connection.js tendríamos entonces el siguiente código.
// Lo que está comentado podrías eliminarlo.
export const pool = new Pool({
// user: process.env.PGUSER,
// host: process.env.PGHOST,
// database: process.env.PGDATABASE,
// password: process.env.PGPASSWORD,
// port: process.env.PGPORT,
allowExitOnIdle: true,
});


osea que si tengo los nomsbres de las variables de entorno mencionadas como estan anteriormente, no es necesario agregarlas en conecction, solo tendriamos esto :

export const pool = new Pool({
allowExitOnIdle: true,
});